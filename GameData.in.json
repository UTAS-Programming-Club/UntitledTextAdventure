#include <types.json.h>

#define NoItem(X)      \
    {                  \
      "name": "",      \
      "physAtkMod": 0, \
      "magAtkMod": 0,  \
      "physDefMod": 0, \
      "magDefMod": 0   \
    }

#define AttackButton(X)                    \
    {                                      \
        "title": "Attack Enemy ",          \
        "outcome": GameCombatFightOutcome, \
        "enemyID": X                       \
    }

#define CONCAT(A, B) A##B

// Based on https://dev.to/sgf4/repeat-macro-in-c-2hh0
#define REPEAT_1(X)
#define REPEAT_2(X) REPEAT_1(X)X(1),
#define REPEAT_3(X) REPEAT_2(X)X(2),
#define REPEAT_4(X) REPEAT_3(X)X(3),
#define REPEAT_5(X) REPEAT_4(X)X(4),
#define REPEAT_6(X) REPEAT_5(X)X(5),
#define REPEAT_7(X) REPEAT_6(X)X(6),
#define REPEAT_8(X) REPEAT_7(X)X(7),
#define REPEAT_9(X) REPEAT_7(X)X(8),
#define REPEAT(X, N) CONCAT(REPEAT_, N)(X)X(N)

{
  "name": "Untitled Text Adventure",
  "defaultPlayerInfo": {
    "health": MaximumEntityStat,
    "stamina": MaximumEntityStat,
    "agility": MinimumEntityStat,
    "priPhysAtk":MinimumEntityStat,
    "priMagAtk": MinimumEntityStat,
    "secPhysAtk": MinimumEntityStat,
    "secMagAtk": MinimumEntityStat,
    "physDef": MinimumEntityStat,
    "magDef": MinimumEntityStat,
    "unlockedEquipment": [
      // Helmet Items
      0, 1,
      // Chest Items
      9, 10,
      // Glove Items
      18, 19,
      // Pants Items
      27, 28,
      // Shoe Items
      36, 37,
      // Primary Weapons
      45, 46,
      // Secondary Weapons
      54
    ],
    "equippedEquipment": [
      0, 9, 18, 27, 36, 45, 54
    ]
  },
  "screens": [
    {
      // ID: 0
      "body": "Untitled text adventure game\n----------------------------\nBy the UTAS Programming Club\n\nCurrently unimplemented :(",
      "extraText": "\nReload Count: ",
      "customScreenCode": MainMenuCustomScreenCode,
      "inputType": ButtonScreenInputType,
      "buttons": [
        {
          "title": "Start Game",
          "outcome": GotoScreenOutcome,
          "newScreenID": GameScreen
        },
        {
          "title": "Load Game",
          "outcome": GotoScreenOutcome,
          "newScreenID": LoadScreen
        },
        {
          "title": "Quit Game",
          "outcome": QuitGameOutcome
        }
      ]
    },
    {
      // ID: 1
      "body": "",
      "extraText": "",
      "customScreenCode": GameCustomScreenCode,
      "inputType": ButtonScreenInputType,
      "buttons": [
        {
          "title": "Go North",
          "outcome": GameGoNorthOutcome
        },
        {
          "title": "Go East",
          "outcome": GameGoEastOutcome
        },
        {
          "title": "Go South",
          "outcome": GameGoSouthOutcome
        },
        {
          "title": "Go West",
          "outcome": GameGoWestOutcome
        },
        {
          "title": "Dodge Trap",
          "outcome": GameHealthChangeOutcome
        },
        {
          "title": "Open Chest",
          "outcome": GameOpenChestOutcome
        },
        // Non-room outcomes
        {
          "title": "Change Equipment",
          "outcome": GotoScreenOutcome,
          "newScreenID": PlayerEquipmentScreen
        },
        {
          "title": "Save and Quit",
          "outcome": GotoScreenOutcome,
          "newScreenID": SaveScreen
        },
        {
          "title": "Quit",
          "outcome": GotoScreenOutcome,
          "newScreenID": MainMenuScreen
        }
      ]
    },
    {
      // ID: 2
      "body": "Enter your password: ",
      "extraText": "",
      "inputType": TextScreenInputType,
      // TODO: Make dependent on type == ButtonScreenType
      "buttons": [],
      // TODO: Make dependent on type == TextScreenType
      "nextScreenID": GameScreen
    },
    {
      // ID: 3
      "body": "Here is your password: \n",
      "extraText": "",
      "customScreenCode": SaveCustomScreenCode,
      "inputType": ButtonScreenInputType,
      "buttons": [
        {
          "title": "Return to Main Menu",
          "outcome": GotoScreenOutcome,
          "newScreenID": MainMenuScreen
        }
      ]
    },
    {
      // ID: 4
      "body": "Player Equipment",
      "extraText": "",
      "customScreenCode": PlayerEquipmentCustomScreenCode,
      "inputType": ButtonScreenInputType,
      "buttons": [
        {
          "title": "Swap Equipment 1",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 0
        },
        {
          "title": "Swap Equipment 2",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 1
        },
        {
          "title": "Swap Equipment 3",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 2
        },
        {
          "title": "Swap Equipment 4",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 3
        },
        {
          "title": "Swap Equipment 5",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 4
        },
        {
          "title": "Swap Equipment 6",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 5
        },
        {
          "title": "Swap Equipment 7",
          "outcome": GameSwapEquipmentOutcome,
          "equipmentSlot": 6
        },
        {
          "title": "Return to Game",
          "outcome": GotoPreviousScreenOutcome,
          "newScreenID": GameScreen
        }
      ]
    },
    {
      // ID: 5
      "body": "Combat",
      // TODO: Use or remove
      "extraText": "A creature has appeared",
      "customScreenCode": CombatCustomScreenCode,
      "inputType": ButtonScreenInputType,
      "buttons": [
        REPEAT(AttackButton, MaxEnemyCount),
        {
          "title": "Check Player Stats",
          "outcome": GotoScreenOutcome,
          "newScreenID": PlayerEquipmentScreen
        },
        {
          "title": "Flee",
          "outcome": GameCombatFleeOutcome,
          "newScreenID": GameScreen
        },
        {
          "title": "Return to game",
          "outcome": GameCombatLeaveOutcome,
          "newScreenID": GameScreen
        }
      ]
    },
    {
      // ID: 6
      "body": "You died.\n\nGoodbye.",
      "extraText": "",
      "inputType": ButtonScreenInputType,
      "buttons": [
        {
          "title": "Return to main menu",
          "outcome": GotoScreenOutcome,
          "newScreenID": MainMenuScreen
        }
      ]
    }
  ],
  "state": [
    {
      "screenID": MainMenuScreen,
      // name: Reload count
      "stateID": 0,
      // type: uint32_t
      "size": 4,
      "default": 0
    },
    {
      "screenID": GameScreen,
      // name: scuffed (picked up item)
      "stateID": 1,
      // type: uint8_t
      "size": 1,
      "default": 0
    }
  ],
  // TODO: Support multiple floors
  // TODO: Support removing doors between adjacent rooms
  "rooms": {
    "floorSize": 5,
    "roomsArray": [
      {
        "type": EmptyRoomType,
        "position": [0, 0]
      },
      {
        "type": EmptyRoomType,
        "position": [0, 1]
      },
      {
        "type": EmptyRoomType,
        "position": [1, 0]
      },
      {
        "type": EmptyRoomType,
        "position": [1, 1]
      },
      // TODO: Make these values required for this room type
      // TODO: Add other factors like agility that impact outcome
      {
        "type": HealthChangeRoomType,
        "position": [1, 2],
        "description": "You have come across a trap",
        "percentageChance": 50,
        "healthChange": -10
      },
      // TODO: Add random loot/loot pools
      {
        "type": CustomChestRoomType,
        "position": [1, 3],
        "description": "A room with a chest lays before you",
        // TODO: Actually use this
        "chestItemID": 11
      },
      {
        "type": CombatRoomType,
        "position": [1, 4],
        // TODO: Use or remove
        "description": "You find yourself surrounded",
        "enemies": [0, 0, 1]
      }
    ]
  },
  // TODO: Make stats optional
  // TODO: Remove attack modifiers from non weapons?
  "equipment": [
    // Helmet Items
    {
      // ID: 0
      "name": "Nothing",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 7,
      "magDefMod": 0
    },
    {
      // ID: 1
      "name": "Leather Helmet",
      "physAtkMod": -5,
      "magAtkMod": -4,
      "physDefMod": 90,
      "magDefMod": 10
    },
    {
      // ID: 2
      "name": "Something Else",
      "physAtkMod": -9,
      "magAtkMod": -79,
      "physDefMod": 30,
      "magDefMod": 20
    },
    {
      // ID: 3
      "name": "Iron Helmet",
      "physAtkMod": -9,
      "magAtkMod": -79,
      "physDefMod": 30,
      "magDefMod": 20
    },
    // IDs: 4 to 8
    REPEAT(NoItem, 5),

    // Chest Items
    {
      // ID: 9
      "name": "Rags",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    {
      // ID: 10
      "name": "Chainmail",
      "physAtkMod": -3,
      "magAtkMod": -20,
      "physDefMod": 2,
      "magDefMod": 100
    },
    {
      // ID: 11
      "name": "Mythril Vest",
      "physAtkMod": -3,
      "magAtkMod": -11,
      "physDefMod": 2,
      "magDefMod": 1
    },
    // IDs: 12 to 17
    REPEAT(NoItem, 6),

    // Glove Items
    {
      // ID: 18
      "name": "Nothing",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    {
      // ID: 19
      "name": "Spiked Gloves",
      "physAtkMod": -15,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    // IDs: 20 to 26
    REPEAT(NoItem, 7),

    // Pants Items
    {
      // ID: 27
      "name": "Rags",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    {
      // ID: 28
      "name": "Fancy Pants",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 10,
      "magDefMod": 20
    },
    // IDs: 29 to 35
    REPEAT(NoItem, 7),

    // Boot Items
      {
      // ID: 36
      "name": "Old Leather Boots",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    {
      // ID: 37
      "name": "Nikes",
      "physAtkMod": 0,
      "magAtkMod": 0,
      "physDefMod": 5,
      "magDefMod": 10
    },
    // IDs: 38 to 44
    REPEAT(NoItem, 7),

    // TODO: Figure out how to handle weapons having different stats
    // Primary Weapons
    {
      // ID: 45
      "name": "Fist",
      "physAtkMod": -5,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    {
      // ID: 46
      "name": "Shotgun",
      "physAtkMod": -20,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    // IDs: 47 to 53
    REPEAT(NoItem, 7),

    // Secondary Weapons
    {
      // ID: 54
      "name": "Fist",
      "physAtkMod": -5,
      "magAtkMod": 0,
      "physDefMod": 0,
      "magDefMod": 0
    },
    // IDS: 55 to 62
    REPEAT(NoItem, 8)
  ],
  "enemyAttacks": [
    {
      "type": PhysEnemyAttackType,
      "damage": -20,
      "minDodgeAgility": 20,
      "maxDodgeAgility": 35
    },
    {
      "type": MagEnemyAttackType,
      "damage": -10,
      "minDodgeAgility":  5,
      "maxDodgeAgility": 10
    }
  ]
}
